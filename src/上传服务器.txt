准备工作：
	1. 购买一个空间 （通过公网IP可以访问的 虚拟空间）

	2. 本机安装远程连接工具 （目的在本地使用这个工具可以直接访问到服务器）
	
	3. 文件传输工具 （上传代码）

	4. 远程安装nginx 服务器

		120.53.222.197:80--》 nginx --》 index.html

		yum安装 和 源码安装 区别

			yum安装 ：
				1.不需要手动编辑
				2.安装过程较为简单
				3.安装时间较短 （不需要手动编译 --》2进制包）
				4.性能固定了 订制性较差
				5.安装文件位置是默认（固定了，存放在不同的位置）
					yum  install nginx 
					yum  uninstall nginx 

			源码安装
				1.下载的是源码 （C语言写好的包）	
				2.漫长的编译过程
				3.安装时间较长
				4.根据项目需求增加或者减少不必要的冗余 动态加载和卸载相关模块
				5.推荐源码安装 订制安装文件的位置
				6.安装包的默认位置都在同一个目录下 ,卸载很方便
				

	5. 源码编译安装nginx
		准备环节：
			1.yum -y install gcc  --》 编译c语言 
			2.yum install -y pcre pcre-devel  --》》安装正则库
			3.yum install -y zlib zlib-devel  --》》压缩和解压缩
			4.yum install -y openssl openssl-devel  --》》 加密库

		安装nginx
			1.下载源码包
				wget http://nginx.org/download/nginx-1.19.6.tar.gz
			2.解压
				tar -zxvf nginx-1.19.6.tar.gz

			3.编译安装
				cd nginx-1.19.6	

				./configure	 shell 文件对安装环境监测 和 订制安装的配置选项，如果不指定后面的选项 走默认

				make  编译过程：源码转化成 二进制包
					出现 warning 暂停 代表编译失败

				make install  代表安装二进制包

			4.检查是否安装成功
				cd /usr/local/nginx/sbin/
				ll
				nginx shell 文件 就是nginx的启动文件
				/*
					查看centos 系统是否启动某个服务
					ps -ef | grep nginx
					
				*/	
			5.启动nginx
				/usr/local/nginx/sbin/nginx

			6.查看nginx的配置文件 

				cat /usr/local/nginx/conf/nginx.conf

				更改完配置 必须重启 配置才能生效
				1.测试配置是否合法
					/usr/local/nginx/sbin/nginx -t
				2.合法状态下才能重启

					/usr/local/nginx/sbin/nginx -s reload
				
				///////////////////////////////////////
									
					#user  nobody;
					worker_processes  1;

					#error_log  logs/error.log;
					#error_log  logs/error.log  notice;
					#error_log  logs/error.log  info;

					#pid        logs/nginx.pid;


					events {
						worker_connections  1024;
					}


					http {
						include       mime.types;
						default_type  application/octet-stream;

						#log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
						#                  '$status $body_bytes_sent "$http_referer" '
						#                  '"$http_user_agent" "$http_x_forwarded_for"';

						#access_log  logs/access.log  main;

						sendfile        on;
						#tcp_nopush     on;

						#keepalive_timeout  0;
						keepalive_timeout  65;

						#gzip  on;

						server {
							listen       8888;
							server_name  localhost;

							location / {
								root   html; 访问的根目录
								index  index.html index.htm; //默认响应的文件
							}

							//反向代理 
							#   http://120.53.222.197:8888/productapi/getSms/
							# 	http://www.web-jshtml.cn/productapi/token/getSms/	

							location /productapi/ {
								proxy_pass  http://www.web-jshtml.cn/productapi/token/
							}

							error_page   500 502 503 504  /50x.html;
							location = /50x.html {
								root   html;
							}

						}

						server {
							listen 80
							location / {
								root   /root/demo; 访问的根目录
								index  index.html index.htm; //默认响应的文件
							}
						}

						# another virtual host using mix of IP-, name-, and port-based configuration
						#
						#server {
						#    listen       8000;
						#    listen       somename:8080;
						#    server_name  somename  alias  another.alias;

						#    location / {
						#        root   html;
						#        index  index.html index.htm;
						#    }
						#}


						# HTTPS server
						#
						#server {
						#    listen       443 ssl;
						#    server_name  localhost;

						#    ssl_certificate      cert.pem;
						#    ssl_certificate_key  cert.key;

						#    ssl_session_cache    shared:SSL:1m;
						#    ssl_session_timeout  5m;

						#    ssl_ciphers  HIGH:!aNULL:!MD5;
						#    ssl_prefer_server_ciphers  on;

						#    location / {
						#        root   html;
						#        index  index.html index.htm;
						#    }
						#}

					}





				




		


	


